// Code generated by protoc-gen-go.
// source: goods/goods.proto
// DO NOT EDIT!

/*
Package goods is a generated protocol buffer package.

It is generated from these files:
	goods/goods.proto

It has these top-level messages:
	NewGoodsResult
	Goods
	RecommendResult
	Recommend
	DetailResult
	Spec
	SpecItem
	SpecPrice
	Comment
	Gallery
*/
package goods

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// NewGoods 新上架商品
type NewGoodsResult struct {
	Goodses []*Goods `protobuf:"bytes,1,rep,name=goodses" json:"goodses,omitempty"`
}

func (m *NewGoodsResult) Reset()                    { *m = NewGoodsResult{} }
func (m *NewGoodsResult) String() string            { return proto.CompactTextString(m) }
func (*NewGoodsResult) ProtoMessage()               {}
func (*NewGoodsResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NewGoodsResult) GetGoodses() []*Goods {
	if m != nil {
		return m.Goodses
	}
	return nil
}

type Goods struct {
	ID           uint32  `protobuf:"varint,1,opt,name=iD" json:"iD,omitempty"`
	CatID        uint32  `protobuf:"varint,2,opt,name=catID" json:"catID,omitempty"`
	ExtendCatID  uint32  `protobuf:"varint,3,opt,name=extendCatID" json:"extendCatID,omitempty"`
	GoodsSN      string  `protobuf:"bytes,4,opt,name=goodsSN" json:"goodsSN,omitempty"`
	GoodsName    string  `protobuf:"bytes,5,opt,name=goodsName" json:"goodsName,omitempty"`
	ClickCount   uint32  `protobuf:"varint,6,opt,name=clickCount" json:"clickCount,omitempty"`
	BrandID      uint32  `protobuf:"varint,7,opt,name=brandID" json:"brandID,omitempty"`
	StoreCount   uint32  `protobuf:"varint,8,opt,name=storeCount" json:"storeCount,omitempty"`
	CommentCount uint32  `protobuf:"varint,9,opt,name=commentCount" json:"commentCount,omitempty"`
	Weight       uint32  `protobuf:"varint,10,opt,name=weight" json:"weight,omitempty"`
	MarketPrice  float32 `protobuf:"fixed32,11,opt,name=marketPrice" json:"marketPrice,omitempty"`
	ShopPrice    float32 `protobuf:"fixed32,12,opt,name=shopPrice" json:"shopPrice,omitempty"`
	CostPrice    float32 `protobuf:"fixed32,13,opt,name=costPrice" json:"costPrice,omitempty"`
	PriceLadder  string  `protobuf:"bytes,14,opt,name=priceLadder" json:"priceLadder,omitempty"`
	Keywords     string  `protobuf:"bytes,15,opt,name=keywords" json:"keywords,omitempty"`
	GoodsRemark  string  `protobuf:"bytes,16,opt,name=goodsRemark" json:"goodsRemark,omitempty"`
	GoodsContent string  `protobuf:"bytes,17,opt,name=goodsContent" json:"goodsContent,omitempty"`
	OriginalImg  string  `protobuf:"bytes,18,opt,name=originalImg" json:"originalImg,omitempty"`
	IsReal       bool    `protobuf:"varint,19,opt,name=isReal" json:"isReal,omitempty"`
	IsOnSale     bool    `protobuf:"varint,20,opt,name=isOnSale" json:"isOnSale,omitempty"`
}

func (m *Goods) Reset()                    { *m = Goods{} }
func (m *Goods) String() string            { return proto.CompactTextString(m) }
func (*Goods) ProtoMessage()               {}
func (*Goods) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 首页推荐商品
type RecommendResult struct {
	Recommend []*Recommend `protobuf:"bytes,1,rep,name=recommend" json:"recommend,omitempty"`
}

func (m *RecommendResult) Reset()                    { *m = RecommendResult{} }
func (m *RecommendResult) String() string            { return proto.CompactTextString(m) }
func (*RecommendResult) ProtoMessage()               {}
func (*RecommendResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RecommendResult) GetRecommend() []*Recommend {
	if m != nil {
		return m.Recommend
	}
	return nil
}

type Recommend struct {
	ID        uint32  `protobuf:"varint,1,opt,name=iD" json:"iD,omitempty"`
	CatID     uint32  `protobuf:"varint,2,opt,name=catID" json:"catID,omitempty"`
	GoodsName string  `protobuf:"bytes,3,opt,name=goodsName" json:"goodsName,omitempty"`
	ShopPrice float32 `protobuf:"fixed32,4,opt,name=shopPrice" json:"shopPrice,omitempty"`
}

func (m *Recommend) Reset()                    { *m = Recommend{} }
func (m *Recommend) String() string            { return proto.CompactTextString(m) }
func (*Recommend) ProtoMessage()               {}
func (*Recommend) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 商品详情
type DetailResult struct {
	Goods      *Goods       `protobuf:"bytes,1,opt,name=goods" json:"goods,omitempty"`
	Specs      []*Spec      `protobuf:"bytes,2,rep,name=specs" json:"specs,omitempty"`
	SpecPrices []*SpecPrice `protobuf:"bytes,3,rep,name=specPrices" json:"specPrices,omitempty"`
	Comms      []*Comment   `protobuf:"bytes,4,rep,name=comms" json:"comms,omitempty"`
	Gallers    []*Gallery   `protobuf:"bytes,5,rep,name=gallers" json:"gallers,omitempty"`
}

func (m *DetailResult) Reset()                    { *m = DetailResult{} }
func (m *DetailResult) String() string            { return proto.CompactTextString(m) }
func (*DetailResult) ProtoMessage()               {}
func (*DetailResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DetailResult) GetGoods() *Goods {
	if m != nil {
		return m.Goods
	}
	return nil
}

func (m *DetailResult) GetSpecs() []*Spec {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *DetailResult) GetSpecPrices() []*SpecPrice {
	if m != nil {
		return m.SpecPrices
	}
	return nil
}

func (m *DetailResult) GetComms() []*Comment {
	if m != nil {
		return m.Comms
	}
	return nil
}

func (m *DetailResult) GetGallers() []*Gallery {
	if m != nil {
		return m.Gallers
	}
	return nil
}

// 规格
type Spec struct {
	SpecName string      `protobuf:"bytes,1,opt,name=specName" json:"specName,omitempty"`
	Items    []*SpecItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *Spec) Reset()                    { *m = Spec{} }
func (m *Spec) String() string            { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()               {}
func (*Spec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Spec) GetItems() []*SpecItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// 规格条目
type SpecItem struct {
	ItemID uint32 `protobuf:"varint,1,opt,name=itemID" json:"itemID,omitempty"`
	Item   string `protobuf:"bytes,2,opt,name=item" json:"item,omitempty"`
	Src    string `protobuf:"bytes,3,opt,name=src" json:"src,omitempty"`
}

func (m *SpecItem) Reset()                    { *m = SpecItem{} }
func (m *SpecItem) String() string            { return proto.CompactTextString(m) }
func (*SpecItem) ProtoMessage()               {}
func (*SpecItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// 不同规格对应的价格
type SpecPrice struct {
	ID         uint32  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	GoodsID    uint32  `protobuf:"varint,2,opt,name=GoodsID" json:"GoodsID,omitempty"`
	Key        string  `protobuf:"bytes,3,opt,name=Key" json:"Key,omitempty"`
	KeyName    string  `protobuf:"bytes,4,opt,name=KeyName" json:"KeyName,omitempty"`
	Price      float32 `protobuf:"fixed32,5,opt,name=Price" json:"Price,omitempty"`
	StoreCount uint32  `protobuf:"varint,6,opt,name=StoreCount" json:"StoreCount,omitempty"`
	BarCode    string  `protobuf:"bytes,7,opt,name=BarCode" json:"BarCode,omitempty"`
	Sku        string  `protobuf:"bytes,8,opt,name=Sku" json:"Sku,omitempty"`
	SpecImg    string  `protobuf:"bytes,9,opt,name=SpecImg" json:"SpecImg,omitempty"`
}

func (m *SpecPrice) Reset()                    { *m = SpecPrice{} }
func (m *SpecPrice) String() string            { return proto.CompactTextString(m) }
func (*SpecPrice) ProtoMessage()               {}
func (*SpecPrice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

// 评论
type Comment struct {
	ID          uint32 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	GoodsID     uint32 `protobuf:"varint,2,opt,name=GoodsID" json:"GoodsID,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=Email" json:"Email,omitempty"`
	Username    string `protobuf:"bytes,4,opt,name=Username" json:"Username,omitempty"`
	Content     string `protobuf:"bytes,5,opt,name=Content" json:"Content,omitempty"`
	AddTime     uint32 `protobuf:"varint,6,opt,name=AddTime" json:"AddTime,omitempty"`
	IsShow      bool   `protobuf:"varint,7,opt,name=IsShow" json:"IsShow,omitempty"`
	ParentID    uint32 `protobuf:"varint,8,opt,name=ParentID" json:"ParentID,omitempty"`
	UserID      uint32 `protobuf:"varint,9,opt,name=UserID" json:"UserID,omitempty"`
	Img         string `protobuf:"bytes,10,opt,name=Img" json:"Img,omitempty"`
	DeliverRank uint32 `protobuf:"varint,11,opt,name=DeliverRank" json:"DeliverRank,omitempty"`
	GoodsRank   uint32 `protobuf:"varint,12,opt,name=GoodsRank" json:"GoodsRank,omitempty"`
	ServiceRank uint32 `protobuf:"varint,13,opt,name=ServiceRank" json:"ServiceRank,omitempty"`
	ZanNum      uint32 `protobuf:"varint,14,opt,name=ZanNum" json:"ZanNum,omitempty"`
	IsAnonymous bool   `protobuf:"varint,15,opt,name=IsAnonymous" json:"IsAnonymous,omitempty"`
	HeadPic     string `protobuf:"bytes,16,opt,name=HeadPic" json:"HeadPic,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

// 详情轮播图组
type Gallery struct {
	ImageUrl string `protobuf:"bytes,1,opt,name=imageUrl" json:"imageUrl,omitempty"`
}

func (m *Gallery) Reset()                    { *m = Gallery{} }
func (m *Gallery) String() string            { return proto.CompactTextString(m) }
func (*Gallery) ProtoMessage()               {}
func (*Gallery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func init() {
	proto.RegisterType((*NewGoodsResult)(nil), "goods.NewGoodsResult")
	proto.RegisterType((*Goods)(nil), "goods.Goods")
	proto.RegisterType((*RecommendResult)(nil), "goods.RecommendResult")
	proto.RegisterType((*Recommend)(nil), "goods.Recommend")
	proto.RegisterType((*DetailResult)(nil), "goods.DetailResult")
	proto.RegisterType((*Spec)(nil), "goods.Spec")
	proto.RegisterType((*SpecItem)(nil), "goods.SpecItem")
	proto.RegisterType((*SpecPrice)(nil), "goods.SpecPrice")
	proto.RegisterType((*Comment)(nil), "goods.Comment")
	proto.RegisterType((*Gallery)(nil), "goods.Gallery")
}

func init() { proto.RegisterFile("goods/goods.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 847 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x96, 0x7f, 0x26, 0xf6, 0x94, 0xed, 0x24, 0xdb, 0x44, 0xa8, 0x85, 0x10, 0x32, 0x23, 0x16,
	0xf9, 0x14, 0x10, 0x5c, 0xb8, 0x06, 0x1b, 0xed, 0x8e, 0x82, 0x42, 0xd4, 0x66, 0x2f, 0xdc, 0x66,
	0x67, 0x4a, 0xce, 0xc8, 0xf3, 0x63, 0x75, 0x8f, 0x13, 0xfc, 0x50, 0x3c, 0x0e, 0xe2, 0xc4, 0xbb,
	0xa0, 0xaa, 0xee, 0x9e, 0x19, 0xe7, 0xc4, 0x5e, 0xac, 0xfe, 0xbe, 0xaf, 0xaa, 0x7a, 0xaa, 0xeb,
	0xc7, 0xf0, 0x66, 0x57, 0xd7, 0x99, 0xf9, 0x8e, 0x7f, 0x6f, 0x0f, 0xba, 0x6e, 0x6a, 0x11, 0x30,
	0x88, 0x7e, 0x82, 0xcb, 0x07, 0x7c, 0x79, 0x47, 0x67, 0x85, 0xe6, 0x58, 0x34, 0xe2, 0x5b, 0x98,
	0xb0, 0x84, 0x46, 0x0e, 0x96, 0xa3, 0xd5, 0xec, 0x87, 0xf9, 0xad, 0xf5, 0xb3, 0x46, 0x5e, 0x8c,
	0xfe, 0x1e, 0x43, 0xc0, 0x94, 0xb8, 0x84, 0x61, 0xbe, 0x91, 0x83, 0xe5, 0x60, 0xb5, 0x50, 0xc3,
	0x7c, 0x23, 0x6e, 0x20, 0x48, 0x93, 0x26, 0xde, 0xc8, 0x21, 0x53, 0x16, 0x88, 0x25, 0xcc, 0xf0,
	0xcf, 0x06, 0xab, 0x6c, 0xcd, 0xda, 0x88, 0xb5, 0x3e, 0x25, 0xa4, 0xbb, 0x79, 0xfb, 0x20, 0xc7,
	0xcb, 0xc1, 0x2a, 0x54, 0x1e, 0x8a, 0x2f, 0x21, 0xe4, 0xe3, 0x43, 0x52, 0xa2, 0x0c, 0x58, 0xeb,
	0x08, 0xf1, 0x15, 0x40, 0x5a, 0xe4, 0xe9, 0x7e, 0x5d, 0x1f, 0xab, 0x46, 0x5e, 0x70, 0xe0, 0x1e,
	0x43, 0x71, 0x3f, 0xea, 0xa4, 0xca, 0xe2, 0x8d, 0x9c, 0xb0, 0xe8, 0x21, 0x79, 0x9a, 0xa6, 0xd6,
	0x68, 0x3d, 0xa7, 0xd6, 0xb3, 0x63, 0x44, 0x04, 0xf3, 0xb4, 0x2e, 0x4b, 0xac, 0x1a, 0x6b, 0x11,
	0xb2, 0xc5, 0x19, 0x27, 0x3e, 0x87, 0x8b, 0x17, 0xcc, 0x77, 0x4f, 0x8d, 0x04, 0x56, 0x1d, 0xa2,
	0x7c, 0xcb, 0x44, 0xef, 0xb1, 0x79, 0xd4, 0x79, 0x8a, 0x72, 0xb6, 0x1c, 0xac, 0x86, 0xaa, 0x4f,
	0x51, 0x56, 0xe6, 0xa9, 0x3e, 0x58, 0x7d, 0xce, 0x7a, 0x47, 0x90, 0x9a, 0xd6, 0xc6, 0x79, 0x2f,
	0xac, 0xda, 0x12, 0x14, 0xfd, 0x40, 0x87, 0x5f, 0x93, 0x2c, 0x43, 0x2d, 0x2f, 0xf9, 0x4d, 0xfa,
	0x94, 0xf8, 0x02, 0xa6, 0x7b, 0x3c, 0xbd, 0xd4, 0x3a, 0x33, 0xf2, 0x8a, 0xe5, 0x16, 0x93, 0xf7,
	0xce, 0x96, 0x9c, 0xbe, 0x47, 0x5e, 0x5b, 0xef, 0x1e, 0x45, 0x99, 0x33, 0x5c, 0xd7, 0x55, 0x83,
	0x55, 0x23, 0xdf, 0xb0, 0xc9, 0x19, 0x47, 0x51, 0x6a, 0x9d, 0xef, 0xf2, 0x2a, 0x29, 0xe2, 0x72,
	0x27, 0x85, 0x8d, 0xd2, 0xa3, 0xe8, 0x6d, 0x72, 0xa3, 0x30, 0x29, 0xe4, 0x67, 0xcb, 0xc1, 0x6a,
	0xaa, 0x1c, 0xa2, 0x6f, 0xcb, 0xcd, 0x6f, 0xd5, 0x36, 0x29, 0x50, 0xde, 0xb0, 0xd2, 0xe2, 0xe8,
	0x0e, 0xae, 0x14, 0xda, 0x17, 0xce, 0x5c, 0x4b, 0xde, 0x42, 0xa8, 0x3d, 0xe5, 0x9a, 0xf2, 0xda,
	0x35, 0x65, 0x67, 0xda, 0x99, 0x44, 0x25, 0x84, 0x2d, 0xff, 0x3f, 0xbb, 0xf3, 0xac, 0xc3, 0x46,
	0xaf, 0x3b, 0xec, 0xac, 0x52, 0xe3, 0x57, 0x95, 0x8a, 0xfe, 0x19, 0xc0, 0x7c, 0x83, 0x4d, 0x92,
	0x17, 0xee, 0x7b, 0x23, 0xb0, 0xd3, 0xc5, 0xb7, 0xbe, 0x1e, 0x20, 0x2b, 0x89, 0xaf, 0x21, 0x30,
	0x07, 0x4c, 0x8d, 0x1c, 0x72, 0x3e, 0x33, 0x67, 0xb3, 0x3d, 0x60, 0xaa, 0xac, 0x22, 0xbe, 0x07,
	0xa0, 0x03, 0x5f, 0x62, 0xe4, 0xe8, 0x2c, 0xef, 0xad, 0x17, 0x54, 0xcf, 0x46, 0x7c, 0x03, 0x01,
	0xa5, 0x6d, 0xe4, 0x98, 0x8d, 0x2f, 0x9d, 0xf1, 0xda, 0xf6, 0xab, 0xb2, 0xa2, 0x58, 0xc1, 0x64,
	0x97, 0x14, 0x05, 0x6a, 0x23, 0x83, 0x33, 0xbb, 0x77, 0xcc, 0x9e, 0x94, 0x97, 0xa3, 0x18, 0xc6,
	0x74, 0x11, 0xd5, 0x8b, 0x6e, 0xe1, 0xc7, 0x19, 0xd8, 0x5e, 0xf2, 0x58, 0xbc, 0x85, 0x20, 0x6f,
	0xb0, 0xf4, 0x89, 0x5c, 0xf5, 0x3e, 0x30, 0x6e, 0xb0, 0x54, 0x56, 0x8d, 0xde, 0xc3, 0xd4, 0x53,
	0xdc, 0x16, 0x0d, 0x96, 0xb1, 0x2f, 0x8b, 0x43, 0x42, 0xc0, 0x98, 0x4e, 0x5c, 0x99, 0x50, 0xf1,
	0x59, 0x5c, 0xc3, 0xc8, 0xe8, 0xd4, 0x95, 0x84, 0x8e, 0xd1, 0xbf, 0x03, 0x08, 0xdb, 0xf4, 0xa9,
	0xbc, 0x6d, 0x9c, 0xa1, 0x5d, 0x22, 0xfc, 0xce, 0x6d, 0x81, 0x3d, 0xa4, 0x48, 0xf7, 0x78, 0xf2,
	0x91, 0xee, 0xf1, 0x44, 0xb6, 0xf7, 0x78, 0xe2, 0xac, 0xdc, 0xc2, 0x71, 0x90, 0x9a, 0xc4, 0x16,
	0x3b, 0xe0, 0x62, 0x5b, 0x40, 0xeb, 0x62, 0xdb, 0xad, 0x0b, 0xb7, 0x68, 0x3a, 0x86, 0xe2, 0xfd,
	0x9c, 0xe8, 0x75, 0x9d, 0x21, 0x2f, 0x9a, 0x50, 0x79, 0x48, 0x77, 0x6f, 0xf7, 0x47, 0xde, 0x30,
	0xa1, 0xa2, 0x23, 0xd9, 0xf2, 0x7b, 0x94, 0x3b, 0xde, 0x2a, 0xa1, 0xf2, 0x30, 0xfa, 0x6b, 0x04,
	0x13, 0x57, 0xb1, 0x4f, 0xc8, 0xee, 0x06, 0x82, 0x5f, 0xca, 0x24, 0x2f, 0x5c, 0x7e, 0x16, 0x50,
	0xe1, 0x3e, 0x18, 0xd4, 0x55, 0x97, 0x62, 0x8b, 0x29, 0x96, 0x9f, 0x6e, 0xbb, 0x52, 0x3d, 0x24,
	0xe5, 0x2e, 0xcb, 0x7e, 0xcf, 0x4b, 0x74, 0x49, 0x7a, 0x48, 0x95, 0x8b, 0xcd, 0xf6, 0xa9, 0x7e,
	0xe1, 0x04, 0xa7, 0xca, 0x21, 0xba, 0xe7, 0x31, 0xd1, 0x58, 0xd1, 0x5c, 0xd9, 0x35, 0xda, 0x62,
	0xf2, 0xa1, 0x3b, 0xe3, 0x8d, 0x5b, 0x9f, 0x0e, 0xd1, 0x9b, 0x50, 0xf6, 0x60, 0xdf, 0x84, 0xd6,
	0xc5, 0x12, 0x66, 0x1b, 0x2c, 0xf2, 0x67, 0xd4, 0x2a, 0xa9, 0xf6, 0xbc, 0x32, 0x17, 0xaa, 0x4f,
	0xd1, 0x20, 0xda, 0x29, 0x22, 0x7d, 0xce, 0x7a, 0x47, 0x90, 0xff, 0x16, 0xf5, 0x33, 0x4d, 0x05,
	0xe9, 0x0b, 0xeb, 0xdf, 0xa3, 0xe8, 0x5b, 0xfe, 0x48, 0xaa, 0x87, 0x63, 0xc9, 0x1b, 0x73, 0xa1,
	0x1c, 0x22, 0xcf, 0xd8, 0xdc, 0x55, 0x75, 0x75, 0x2a, 0xeb, 0xa3, 0xdd, 0x97, 0x53, 0xd5, 0xa7,
	0xe8, 0x4d, 0xde, 0x63, 0x92, 0x3d, 0xe6, 0xa9, 0x5b, 0x97, 0x1e, 0x46, 0x6f, 0x61, 0xe2, 0x06,
	0x87, 0xf7, 0x5a, 0x99, 0xec, 0xf0, 0x83, 0x2e, 0xfc, 0x9c, 0x78, 0xfc, 0xf1, 0x82, 0xff, 0x77,
	0x7f, 0xfc, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x41, 0x58, 0xe9, 0xf9, 0x8c, 0x07, 0x00, 0x00,
}
